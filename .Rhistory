lwd=3,
col=adjustcolor("firebrick", alpha.f=0.2),
border="firebrick")
dev.off()
t <- seq(0, 2*pi, by=0.01)
x <- 16*sin(t)^3
y <- 13*cos(t) - 5*cos(2*t) - 2*cos(3*t) - cos(4*t)
png("~/Desktop/iloveyou.png", width=5, height=5, units="in", res=300)
par(mar=c(0,0,0,0))
sep_x <- 9
sep_y <- 1
plot(x, y,
col='white', bty='n',
xaxt='n', yaxt='n',
ylab='', xlab='')
for(xx in seq(-16, 16, by=sep_x)){
for(yy in seq(-17, 12, by=sep_y)){
text(xx, yy, "hi jam its me melon (:", col='lightgray', cex=0.8)
}
}
ind <- which(y <= 4)
xl = x[ind][order(x[ind])]
polygon(c(xl, rev(xl)), c(rep(min(y), length(xl)), y[ind][order(x[ind])]), col='white', border='white')
ind = which(y > 4)
xu = x[ind][order(x[ind])]
polygon(c(xu, rev(xu)), c(rep(max(y), length(xu)), y[ind][order(x[ind])]), col='white', border='white')
rect(-100, -100, 100, min(y), col='white', border='white')
rect(-100, -100, min(x), 100, col='white', border='white')
rect(-100, max(y), 100, 100, col='white', border='white')
rect(max(x), -100, 100, 100, col='white', border='white')
polygon(x, y,
lwd=3,
col=adjustcolor("firebrick", alpha.f=0.2),
border="firebrick")
dev.off()
t <- seq(0, 2*pi, by=0.01)
x <- 16*sin(t)^3
y <- 13*cos(t) - 5*cos(2*t) - 2*cos(3*t) - cos(4*t)
png("~/Desktop/iloveyou.png", width=5, height=5, units="in", res=300)
par(mar=c(0,0,0,0))
sep_x <- 9
sep_y <- 1
plot(x, y,
col='white', bty='n',
xaxt='n', yaxt='n',
ylab='', xlab='')
for(xx in seq(-16, 16, by=sep_x)){
eps <- rnorm(1)
for(yy in seq(-17, 12, by=sep_y)){
text(xx+eps, yy, "hi jam its me melon (:", col='lightgray', cex=0.8)
}
}
ind <- which(y <= 4)
xl = x[ind][order(x[ind])]
polygon(c(xl, rev(xl)), c(rep(min(y), length(xl)), y[ind][order(x[ind])]), col='white', border='white')
ind = which(y > 4)
xu = x[ind][order(x[ind])]
polygon(c(xu, rev(xu)), c(rep(max(y), length(xu)), y[ind][order(x[ind])]), col='white', border='white')
rect(-100, -100, 100, min(y), col='white', border='white')
rect(-100, -100, min(x), 100, col='white', border='white')
rect(-100, max(y), 100, 100, col='white', border='white')
rect(max(x), -100, 100, 100, col='white', border='white')
polygon(x, y,
lwd=3,
col=adjustcolor("firebrick", alpha.f=0.2),
border="firebrick")
dev.off()
t <- seq(0, 2*pi, by=0.01)
x <- 16*sin(t)^3
y <- 13*cos(t) - 5*cos(2*t) - 2*cos(3*t) - cos(4*t)
png("~/Desktop/iloveyou.png", width=5, height=5, units="in", res=300)
par(mar=c(0,0,0,0))
sep_x <- 9
sep_y <- 1
plot(x, y,
col='white', bty='n',
xaxt='n', yaxt='n',
ylab='', xlab='')
for(yy in seq(-17, 12, by=sep_x)){
eps <- rnorm(1)
for(xx in seq(-16, 16, by=sep_y)){
text(xx+eps, yy, "hi jam its me melon (:", col='lightgray', cex=0.8)
}
}
ind <- which(y <= 4)
xl = x[ind][order(x[ind])]
polygon(c(xl, rev(xl)), c(rep(min(y), length(xl)), y[ind][order(x[ind])]), col='white', border='white')
ind = which(y > 4)
xu = x[ind][order(x[ind])]
polygon(c(xu, rev(xu)), c(rep(max(y), length(xu)), y[ind][order(x[ind])]), col='white', border='white')
rect(-100, -100, 100, min(y), col='white', border='white')
rect(-100, -100, min(x), 100, col='white', border='white')
rect(-100, max(y), 100, 100, col='white', border='white')
rect(max(x), -100, 100, 100, col='white', border='white')
polygon(x, y,
lwd=3,
col=adjustcolor("firebrick", alpha.f=0.2),
border="firebrick")
dev.off()
t <- seq(0, 2*pi, by=0.01)
x <- 16*sin(t)^3
y <- 13*cos(t) - 5*cos(2*t) - 2*cos(3*t) - cos(4*t)
png("~/Desktop/iloveyou.png", width=5, height=5, units="in", res=300)
par(mar=c(0,0,0,0))
sep_x <- 9
sep_y <- 1
plot(x, y,
col='white', bty='n',
xaxt='n', yaxt='n',
ylab='', xlab='')
for(yy in seq(-17, 12, by=sep_x)){
eps <- rnorm(1)
eps <- 0
for(xx in seq(-16, 16, by=sep_y)){
text(xx+eps, yy, "hi jam its me melon (:", col='lightgray', cex=0.8)
}
}
ind <- which(y <= 4)
xl = x[ind][order(x[ind])]
polygon(c(xl, rev(xl)), c(rep(min(y), length(xl)), y[ind][order(x[ind])]), col='white', border='white')
ind = which(y > 4)
xu = x[ind][order(x[ind])]
polygon(c(xu, rev(xu)), c(rep(max(y), length(xu)), y[ind][order(x[ind])]), col='white', border='white')
rect(-100, -100, 100, min(y), col='white', border='white')
rect(-100, -100, min(x), 100, col='white', border='white')
rect(-100, max(y), 100, 100, col='white', border='white')
rect(max(x), -100, 100, 100, col='white', border='white')
polygon(x, y,
lwd=3,
col=adjustcolor("firebrick", alpha.f=0.2),
border="firebrick")
dev.off()
t <- seq(0, 2*pi, by=0.01)
x <- 16*sin(t)^3
y <- 13*cos(t) - 5*cos(2*t) - 2*cos(3*t) - cos(4*t)
png("~/Desktop/iloveyou.png", width=5, height=5, units="in", res=300)
par(mar=c(0,0,0,0))
sep_x <- 9
sep_y <- 1
plot(x, y,
col='white', bty='n',
xaxt='n', yaxt='n',
ylab='', xlab='')
for(yy in seq(-17, 12, by=sep_y)){
eps <- rnorm(1)
#eps <- 0
for(xx in seq(-16, 16, by=sep_x)){
text(xx+eps, yy, "hi jam its me melon (:", col='lightgray', cex=0.8)
}
}
ind <- which(y <= 4)
xl = x[ind][order(x[ind])]
polygon(c(xl, rev(xl)), c(rep(min(y), length(xl)), y[ind][order(x[ind])]), col='white', border='white')
ind = which(y > 4)
xu = x[ind][order(x[ind])]
polygon(c(xu, rev(xu)), c(rep(max(y), length(xu)), y[ind][order(x[ind])]), col='white', border='white')
rect(-100, -100, 100, min(y), col='white', border='white')
rect(-100, -100, min(x), 100, col='white', border='white')
rect(-100, max(y), 100, 100, col='white', border='white')
rect(max(x), -100, 100, 100, col='white', border='white')
polygon(x, y,
lwd=3,
col=adjustcolor("firebrick", alpha.f=0.2),
border="firebrick")
dev.off()
t <- seq(0, 2*pi, by=0.01)
x <- 16*sin(t)^3
y <- 13*cos(t) - 5*cos(2*t) - 2*cos(3*t) - cos(4*t)
png("~/Desktop/iloveyou.png", width=5, height=5, units="in", res=300)
par(mar=c(0,0,0,0))
sep_x <- 9
sep_y <- 1
plot(x, y,
col='white', bty='n',
xaxt='n', yaxt='n',
ylab='', xlab='')
for(yy in seq(-17, 12, by=sep_y)){
eps <- 3*rnorm(1)
for(xx in seq(-16, 16, by=sep_x)){
text(xx+eps, yy, "hi jam its me melon (:", col='lightgray', cex=0.8)
}
}
ind <- which(y <= 4)
xl = x[ind][order(x[ind])]
polygon(c(xl, rev(xl)), c(rep(min(y), length(xl)), y[ind][order(x[ind])]), col='white', border='white')
ind = which(y > 4)
xu = x[ind][order(x[ind])]
polygon(c(xu, rev(xu)), c(rep(max(y), length(xu)), y[ind][order(x[ind])]), col='white', border='white')
rect(-100, -100, 100, min(y), col='white', border='white')
rect(-100, -100, min(x), 100, col='white', border='white')
rect(-100, max(y), 100, 100, col='white', border='white')
rect(max(x), -100, 100, 100, col='white', border='white')
polygon(x, y,
lwd=3,
col=adjustcolor("firebrick", alpha.f=0.2),
border="firebrick")
dev.off()
t <- seq(0, 2*pi, by=0.01)
x <- 16*sin(t)^3
y <- 13*cos(t) - 5*cos(2*t) - 2*cos(3*t) - cos(4*t)
png("~/Desktop/iloveyou.png", width=5, height=5, units="in", res=300)
par(mar=c(0,0,0,0))
sep_x <- 9
sep_y <- 1
plot(x, y,
col='white', bty='n',
xaxt='n', yaxt='n',
ylab='', xlab='')
for(yy in seq(-17, 12, by=sep_y)){
eps <- 1.5*rnorm(1)
for(xx in seq(-16, 16, by=sep_x)){
text(xx+eps, yy, "hi jam its me melon (:", col='lightgray', cex=0.8)
}
}
ind <- which(y <= 4)
xl = x[ind][order(x[ind])]
polygon(c(xl, rev(xl)), c(rep(min(y), length(xl)), y[ind][order(x[ind])]), col='white', border='white')
ind = which(y > 4)
xu = x[ind][order(x[ind])]
polygon(c(xu, rev(xu)), c(rep(max(y), length(xu)), y[ind][order(x[ind])]), col='white', border='white')
rect(-100, -100, 100, min(y), col='white', border='white')
rect(-100, -100, min(x), 100, col='white', border='white')
rect(-100, max(y), 100, 100, col='white', border='white')
rect(max(x), -100, 100, 100, col='white', border='white')
polygon(x, y,
lwd=3,
col=adjustcolor("firebrick", alpha.f=0.2),
border="firebrick")
dev.off()
t <- seq(0, 2*pi, by=0.01)
x <- 16*sin(t)^3
y <- 13*cos(t) - 5*cos(2*t) - 2*cos(3*t) - cos(4*t)
png("~/Desktop/iloveyou.png", width=5, height=5, units="in", res=300)
par(mar=c(0,0,0,0))
sep_x <- 9
sep_y <- 1
plot(x, y,
col='white', bty='n',
xaxt='n', yaxt='n',
ylab='', xlab='')
for(yy in seq(-17, 12, by=sep_y)){
eps <- 1.5*rnorm(1)
for(xx in seq(-16, 16, by=sep_x)){
text(xx+eps, yy, "hi jam its me melon (:", col='lightgray', cex=0.8)
}
}
ind <- which(y <= 4)
xl = x[ind][order(x[ind])]
polygon(c(xl, rev(xl)), c(rep(min(y), length(xl)), y[ind][order(x[ind])]), col='white', border='white')
ind = which(y > 4)
xu = x[ind][order(x[ind])]
polygon(c(xu, rev(xu)), c(rep(max(y), length(xu)), y[ind][order(x[ind])]), col='white', border='white')
rect(-100, -100, 100, min(y), col='white', border='white')
rect(-100, -100, min(x), 100, col='white', border='white')
rect(-100, max(y), 100, 100, col='white', border='white')
rect(max(x), -100, 100, 100, col='white', border='white')
polygon(x, y,
lwd=3,
col=adjustcolor("firebrick", alpha.f=0.2),
border="firebrick")
dev.off()
t <- seq(0, 2*pi, by=0.01)
x <- 16*sin(t)^3
y <- 13*cos(t) - 5*cos(2*t) - 2*cos(3*t) - cos(4*t)
png("~/Desktop/iloveyou.png", width=5, height=5, units="in", res=300)
par(mar=c(0,0,0,0))
sep_x <- 9
sep_y <- 1
plot(x, y,
col='white', bty='n',
xaxt='n', yaxt='n',
ylab='', xlab='')
for(yy in seq(-17, 12, by=sep_y)){
eps <- 1.5*rnorm(1)
for(xx in seq(-16, 16, by=sep_x)){
text(xx+eps, yy, "hi jam its me melon (:", col='lightgray', cex=0.8)
}
}
ind <- which(y <= 4)
xl = x[ind][order(x[ind])]
polygon(c(xl, rev(xl)), c(rep(min(y), length(xl)), y[ind][order(x[ind])]), col='white', border='white')
ind = which(y > 4)
xu = x[ind][order(x[ind])]
polygon(c(xu, rev(xu)), c(rep(max(y), length(xu)), y[ind][order(x[ind])]), col='white', border='white')
rect(-100, -100, 100, min(y), col='white', border='white')
rect(-100, -100, min(x), 100, col='white', border='white')
rect(-100, max(y), 100, 100, col='white', border='white')
rect(max(x), -100, 100, 100, col='white', border='white')
polygon(x, y,
lwd=3,
col=adjustcolor("firebrick", alpha.f=0.2),
border="firebrick")
dev.off()
#' #The following are equivalent
#' n <- 100 #Number of observations
#' p <- 4   #Number of variables (beyond p = 2, variables are inert)
#' X <- matrix(runif(n*p), nrow=n)
#' y <- apply(X, 1, ff1)
#' gm <- gbass(X, Y, nmcmc=1000, nburn=901)
#' bm <- gm2bm(gm)
#' sob <- sobol(bm)
#' plot(sob)
#'
gm2bm<-function(gm){
out<-list()
out$degree<-1
nmcmc<-length(gm$a)
maxb<-max(gm$M)
beta<-matrix(nrow=nmcmc,ncol=maxb+1)
for(i in 1:nmcmc)
beta[i,1:length(gm$a[[i]])]<-gm$a[[i]]
out$beta<-beta
out$nbasis<-gm$M
out$p<-ncol(gm$X)
gm$lookup[[1]]
model.lookup<-1
for(i in 2:nmcmc){
if(gm$M[i]==gm$M[i-1]){
if(all(gm$basis[[i]] == gm$basis[[i-1]])){
model.lookup[i]<-model.lookup[i-1]
} else{
model.lookup[i]<-model.lookup[i-1]+1
}
} else{
model.lookup[i]<-model.lookup[i-1]+1
}
}
out$model.lookup<-model.lookup
out$n.models<-max(model.lookup)
out$des<-T
out$func<-F
out$cat<-F
max.int<-3
n.int.des<-matrix(nrow=out$n.models,ncol=maxb)
signs.des<-vars.des<-knots.des<-array(dim = c(out$n.models,maxb,max.int))
for(i in 1:out$n.models){
ind<-which(model.lookup==i)
for(j in 1:gm$M[ind[1]]){
n.int.des[i,j]<-gm$lookup[[gm$basis[ind[1]][[1]][j]]]$J
signs.des[i,j,1:n.int.des[i,j]]<-gm$lookup[[gm$basis[ind[1]][[1]][j]]]$s
vars.des[i,j,1:n.int.des[i,j]]<-gm$lookup[[gm$basis[ind[1]][[1]][j]]]$u
knots.des[i,j,1:n.int.des[i,j]]<-gm$lookup[[gm$basis[ind[1]][[1]][j]]]$t
}
}
out$xx.des <- gm$X
out$n.int.des<-n.int.des
out$signs.des<-signs.des
out$knots.des<-knots.des
out$vars.des<-vars.des
out$cx<-rep('numeric',out$p)
out$range.des<-rbind(rep(0,out$p),rep(1,out$p))
out$nburn<-0
out$thin<-1
out$nmcmc<-nmcmc
out$pdes=out$p
out$pcat<-0
out$pfunc<-0
out$maxInt.des<-max.int
out$maxInt.cat<-0
out$maxInt.func<-0
class(out)<-'bass'
return(out)
}
library(devtools)
document()
document()
library(GBASS)
document()
library(GBASS)
#' #The following are equivalent
#' n <- 100 #Number of observations
#' p <- 4   #Number of variables (beyond p = 2, variables are inert)
#' X <- matrix(runif(n*p), nrow=n)
#' y <- apply(X, 1, ff1)
#' gm <- gbass(X, Y, nmcmc=1000, nburn=901)
#' bm <- gm2bm(gm)
#' sob <- sobol(bm)
#' plot(sob)
#'
gm2bm<-function(gm){
out<-list()
out$degree<-1
nmcmc<-length(gm$a)
maxb<-max(gm$M)
beta<-matrix(nrow=nmcmc,ncol=maxb+1)
for(i in 1:nmcmc)
beta[i,1:length(gm$a[[i]])]<-gm$a[[i]]
out$beta<-beta
out$nbasis<-gm$M
out$p<-ncol(gm$X)
gm$lookup[[1]]
model.lookup<-1
for(i in 2:nmcmc){
if(gm$M[i]==gm$M[i-1]){
if(all(gm$basis[[i]] == gm$basis[[i-1]])){
model.lookup[i]<-model.lookup[i-1]
} else{
model.lookup[i]<-model.lookup[i-1]+1
}
} else{
model.lookup[i]<-model.lookup[i-1]+1
}
}
out$model.lookup<-model.lookup
out$n.models<-max(model.lookup)
out$des<-T
out$func<-F
out$cat<-F
max.int<-max(unlist(lapply(gm$lookup, function(zz) length(zz$s))))
n.int.des<-matrix(nrow=out$n.models,ncol=maxb)
signs.des<-vars.des<-knots.des<-array(dim = c(out$n.models,maxb,max.int))
for(i in 1:out$n.models){
ind<-which(model.lookup==i)
for(j in 1:gm$M[ind[1]]){
n.int.des[i,j]<-gm$lookup[[gm$basis[ind[1]][[1]][j]]]$J
signs.des[i,j,1:n.int.des[i,j]]<-gm$lookup[[gm$basis[ind[1]][[1]][j]]]$s
vars.des[i,j,1:n.int.des[i,j]]<-gm$lookup[[gm$basis[ind[1]][[1]][j]]]$u
knots.des[i,j,1:n.int.des[i,j]]<-gm$lookup[[gm$basis[ind[1]][[1]][j]]]$t
}
}
out$xx.des <- gm$X
out$n.int.des<-n.int.des
out$signs.des<-signs.des
out$knots.des<-knots.des
out$vars.des<-vars.des
out$cx<-rep('numeric',out$p)
out$range.des<-rbind(rep(0,out$p),rep(1,out$p))
out$nburn<-0
out$thin<-1
out$nmcmc<-nmcmc
out$pdes=out$p
out$pcat<-0
out$pfunc<-0
out$maxInt.des<-max.int
out$maxInt.cat<-0
out$maxInt.func<-0
class(out)<-c('bass', class(gm))
return(out)
}
devtools::document()
devtools::document()
library(GBASS)
gm
?nwbass2
?bessel
besselK(1, -1/2)
besselK(1, 1/2)/besselK(1, -1/22)
besselK(1, 1/2)/besselK(1, -1/2)
mu_gig(-1/2, 1, 1)
mu_gig <- function(p, a, b){
sqrt(b/a)*besselK(sqrt(a*b), p+1)/besselK(sqrt(a*b), p)
}
var_gig <- function(p, a, b){
(b/a)*(besselK(sqrt(a*b), p+2)/besselK(sqrt(a*b), p) - (besselK(sqrt(a*b), p+1)/besselK(sqrt(a*b), p))^2)
}
mu_gig(-1/2, 1, 1)
var_gig(-1/2, 1, 1)
devtools::document()
devtools::document()
library(GBASS)
f <- function(x){
x[1]^2 + x[1]*x[2] + x[2]^3/9
}
X <- lhs::randomLHS(1000, 2)
y <- apply(X, 1, f) + rnorm(500, 0, 0.46*(0.1))
mod_g <- nwbass(X, y)
devtools::document()
library(GBASS)
mod_g <- nwbass(X, y)
f <- function(x){
x[1]^2 + x[1]*x[2] + x[2]^3/9
}
X <- lhs::randomLHS(1000, 2)
y <- apply(X, 1, f) + rnorm(500, 0, 0.46*(0.1))
mod_g <- nwbass(X, y)
X
y
dim(X)
f <- function(x){
x[1]^2 + x[1]*x[2] + x[2]^3/9
}
X <- lhs::randomLHS(1000, 2)
y <- apply(X, 1, f) + rnorm(500, 0, 0.46*(0.1))
mod_g <- nwbass(X, y)
document()
devtools::document()
nwbass(X< y)
nwbass(X, y)
library(GBASS)
pts <- 2475
pts <- pts - 1485
pts
pts - 825
165/15
pts <- pts + 825
pts
pts <- 2475
pts <- pts - 1485
pts
library(knitr)
knitr::include_graphics("inst/logos/GBASS.png")
knitr::include_graphics("inst/logos/GBASS.png")
knitr::include_graphics("inst/logos/GBASS.png")
knitr::include_graphics("inst/logos/GBASS.png")
knitr::include_graphics("inst/logos/GBASS.png")
knitr::include_graphics("inst/logos/GBASS.png")
knitr::include_graphics("inst/logos/GBASS.png")
knitr::include_graphics("inst/logos/GBASS.png")
knitr::include_graphics("inst/logos/GBASS.png")
browseVignettes("concordance")
library(concordance)
browseVignettes("concordance")
