mean(epsilon)
hist(epsilon, add=TRUE, breaks=30, freq=F, col=adjustcolor('dodgerblue', alpha.f=0.2))
hist(epsilon - 1, add=TRUE, breaks=30, freq=F, col=adjustcolor('dodgerblue', alpha.f=0.2))
hist((rgamma(100000, 1.5, 1) - 1.5), breaks=30, freq=F, xlim=c(-10, 15))
hist(epsilon - 1, add=TRUE, breaks=30, freq=F, col=adjustcolor('dodgerblue', alpha.f=0.2))
hist((rgamma(100000, 1.5, 1) - 1.5), breaks=30, freq=F)X
X
dim(X)
dim(rbind(X, X))
dim(rbind(X, X, X))
dim(rbind(X, X, X, X))
dim(rbind(X, X, X, X, X))
hist(epsilon)
hist(epsilon, breaks=30)
X <- lhs::maximinLHS(200, 2)
X <- rbind(X, X, X, X, X)
n <- nrow(X)
y <- apply(X, 1, ff4)*6 + (rgamma(n, 1.5, 1) - 1.5)
mod2 <- nwbass2(X, y, maxInt=2, m_gamma = 1, s_gamma = 0.1, scale=1000, m_beta=0, s_beta=1)
X <- lhs::maximinLHS(200, 2)
X <- rbind(X, X, X, X, X)
n <- nrow(X)
y <- apply(X, 1, ff4)*6 + (rgamma(n, 1.5, 1) - 1.5)
#mod2 <- nwbass2(X, y, maxInt=2, m_gamma = 1, s_gamma = 0.1, scale=1000, m_beta=0, s_beta=1)
mod2b <- nwbass2(X, y, maxInt=2, m_gamma=90, s_gamma=25, scale=1000, m_beta=0, s_beta=1)
plot(mod2)
nn <- 1000
ww <- mean(mod2$w)
cc <- 1000
beta <- mean(mod2$beta)
xi <- rnorm(nn, 0, sqrt(cc))
gamma <- mean(mod2$gamma)
vv <- rep(NA, nn)
for(i in 1:nn){
vv[i] <- rgig2.vec(-1/2, gamma^2, 1)
}
epsilon <- sqrt(ww)*(beta*vv + sqrt(vv)*xi)
hist((rgamma(100000, 1.5, 1) - 1.5), breaks=30, freq=F, xlim=c(-10, 15))
hist(epsilon - 1, add=TRUE, breaks=30, freq=F, col=adjustcolor('dodgerblue', alpha.f=0.2))
hist((rgamma(100000, 1.5, 1) - 1.5), breaks=30, freq=F, xlim=c(-10, 15))
hist(epsilon - mean(epsilon), add=TRUE, breaks=30, freq=F, col=adjustcolor('dodgerblue', alpha.f=0.2))
par(mfrow=c(1,1))
hist((rgamma(100000, 1.5, 1) - 1.5), breaks=30, freq=F, xlim=c(-10, 15))
hist(epsilon - mean(epsilon), add=TRUE, breaks=30, freq=F, col=adjustcolor('dodgerblue', alpha.f=0.2))
ts.plot(mod2$beta)
maximal_coupling <- function(n, d1, d2, g1=NULL, g2=NULL){
X <- matrix(NA, nrow=n, ncol=2)
for(i in 1:n){
x <- g1()
w <- runif(1, 0, d1(x))
if(w <= d2(x)){
X[i,] <- c(x, x)
}else{
flag <- TRUE
while(flag){
y <- g2()
w <- runif(1, 0, d2(y))
if(w > d1(y)){
X[i,] <- c(x, y)
flag <- FALSE
}
}
}
}
return(X)
}
#' @param g2 generator for distribution 2
#' @return An nx2 matrix of draws where the ith column has (marginal) distribution i. The Pr(X[,1] == X[,2]) is maximized.
#' @details Uses the gamma-coupling algorithm of Johnson 1998
#' @export
#' @examples
#' d1 <- function(x) dnorm(x)
#' d2 <- function(x) dunif(x, -3, 3)
#' g1 <- function()  rnorm(1)
#' g2 <- function()  runif(1, -3, 3)
#' maximal_coupling(1000, d1, d2, g1, g2)
maximal_coupling <- function(n, d1, d2, g1=NULL, g2=NULL){
X <- matrix(NA, nrow=n, ncol=2)
for(i in 1:n){
x <- g1()
w <- runif(1, 0, d1(x))
if(w <= d2(x)){
X[i,] <- c(x, x)
}else{
flag <- TRUE
while(flag){
y <- g2()
w <- runif(1, 0, d2(y))
if(w > d1(y)){
X[i,] <- c(x, y)
flag <- FALSE
}
}
}
}
return(X)
}
d1 <- function(x) dnorm(x)
d2 <- function(x) dunif(-3, 3)
d2 <- function(x) dunif(x, -3, 3)
d2
d1
g1 <- rnorm(1)
g2 <- runif(1, -3, 3)
tmp <- maximal_coupling(100, d1, d2, g1, g2)
g1 <- function() rnorm(1)
g2 <- function() runif(1, -3, 3)
tmp <- maximal_coupling(100, d1, d2, g1, g2)
tmp
hist(tmp[,1])
hist(tmp[,2])
which(tmp[,1] == tmp[,2])
plot(tmp)
pairs(tmp)
tmp <- maximal_coupling(10000, d1, d2, g1, g2)
par(mfrow=c(1, 3))
hist(tmp[,1], main="Histogram of X~p")
hist(tmp[,2], main="Histogram of Y~q")
plot(tmp, pch=16, cex=0.5, main="Scatterplot of X vs Y")
mod2
X <- lhs::maximinLHS(200, 2)
X <- rbind(X, X, X, X, X)
n <- nrow(X)
apply(X, 1, ff4)*6
library(GBASS)
apply(X, 1, ff4)*6
plot(apply(X, 1, ff4)*6)
y <- apply(X, 1, ff4)*6 + (rgamma(n, 1.5, 1) - 1.5)
plot(y)
plot(X[,1], y)
X <- lhs::maximinLHS(200, 2)
X <- rbind(X, X, X, X, X)
n <- nrow(X)
y <- apply(X, 1, ff4)*6 + (rgamma(n, 1.5, 1) - 1.5)
#mod2 <- nwbass2(X, y, maxInt=2, m_gamma = 1, s_gamma = 0.1, scale=1000, m_beta=0, s_beta=1)
mod2b <- nwbass2(X, y, maxInt=2, m_gamma=90, s_gamma=25, scale=100, m_beta=0, s_beta=10)
#mod2 <- nwbass2(X, y, maxInt=2, m_gamma = 1, s_gamma = 0.1, scale=1000, m_beta=0, s_beta=1)
mod2b <- nwbass2(X, y, maxInt=2, m_gamma=90, s_gamma=25, scale=100, m_beta=0, s_beta=1)
#mod2 <- nwbass2(X, y, maxInt=2, m_gamma = 1, s_gamma = 0.1, scale=1000, m_beta=0, s_beta=1)
mod2b <- nwbass2(X, y, maxInt=2, m_gamma=90, s_gamma=25, scale=1000, m_beta=0, s_beta=1)
library(roxygen2)
library(devtools)
document()
library(GBASS)
X <- lhs::maximinLHS(200, 2)
X <- rbind(X, X, X, X, X)
n <- nrow(X)
y <- apply(X, 1, ff4)*6 + (rgamma(n, 1.5, 1) - 1.5)
#mod2 <- nwbass2(X, y, maxInt=2, m_gamma = 1, s_gamma = 0.1, scale=1000, m_beta=0, s_beta=1)
mod2b <- nwbass2(X, y, maxInt=2, m_gamma=90, s_gamma=25, scale=1000, m_beta=0, s_beta=1)
plot(mod2)
mod2 <- mod2b
plot(mod2)
nn <- 1000
ww <- mean(mod2$w)
cc <- 1000
beta <- mean(mod2$beta)
xi <- rnorm(nn, 0, sqrt(cc))
gamma <- mean(mod2$gamma)
vv <- rep(NA, nn)
for(i in 1:nn){
vv[i] <- rgig2.vec(-1/2, gamma^2, 1)
}
vv[i] <- rgig2(-1/2, gamma^2, 1)
nn <- 1000
ww <- mean(mod2$w)
cc <- 1000
beta <- mean(mod2$beta)
xi <- rnorm(nn, 0, sqrt(cc))
gamma <- mean(mod2$gamma)
vv <- rep(NA, nn)
for(i in 1:nn){
vv[i] <- rgig2(-1/2, gamma^2, 1)
}
epsilon <- sqrt(ww)*(beta*vv + sqrt(vv)*xi)
par(mfrow=c(1,1))
hist((rgamma(100000, 1.5, 1) - 1.5), breaks=30, freq=F, xlim=c(-10, 15))
hist(epsilon - mean(epsilon), add=TRUE, breaks=30, freq=F, col=adjustcolor('dodgerblue', alpha.f=0.2))
ts.plot(mod2$beta)
nn <- 1000
ww <- mean(mod2$w)
cc <- 1000
beta <- mean(mod2$beta)
xi <- rnorm(nn, 0, sqrt(cc))
gamma <- mean(mod2$gamma)
vv <- rep(NA, nn)
for(i in 1:nn){
vv[i] <- rgig2(-1/2, gamma^2, 1)
}
epsilon <- sqrt(ww)*(beta*vv + sqrt(vv)*xi)
par(mfrow=c(1,1))
hist((rgamma(100000, 1.5, 1) - 1.5), breaks=30, freq=F, xlim=c(-10, 15))
hist(epsilon - mean(epsilon), add=TRUE, breaks=30, freq=F, col=adjustcolor('dodgerblue', alpha.f=0.2))
#mod2 <- nwbass2(X, y, maxInt=2, m_gamma = 1, s_gamma = 0.1, scale=1000, m_beta=0, s_beta=1)
mod2 <- nwbass2(X, y, maxInt=2, m_gamma=90, s_gamma=25, scale=1000, m_beta=0, s_beta=10)
#mod2 <- nwbass2(X, y, maxInt=2, m_gamma = 1, s_gamma = 0.1, scale=1000, m_beta=0, s_beta=1)
mod2 <- nwbass2(X, y, maxInt=2, m_gamma=90, s_gamma=25, scale=1000, m_beta=0, s_beta=2)
#mod2 <- nwbass2(X, y, maxInt=2, m_gamma = 1, s_gamma = 0.1, scale=1000, m_beta=0, s_beta=1)
mod2 <- nwbass2(X, y, maxInt=2, m_gamma=90, s_gamma=25, scale=1000, m_beta=0, s_beta=1)
plot(mod2)
nn <- 1000
ww <- mean(mod2$w)
cc <- 1000
beta <- mean(mod2$beta)
xi <- rnorm(nn, 0, sqrt(cc))
gamma <- mean(mod2$gamma)
vv <- rep(NA, nn)
for(i in 1:nn){
vv[i] <- rgig2(-1/2, gamma^2, 1)
}
epsilon <- sqrt(ww)*(beta*vv + sqrt(vv)*xi)
par(mfrow=c(1,1))
hist((rgamma(100000, 1.5, 1) - 1.5), breaks=30, freq=F, xlim=c(-10, 15))
hist(epsilon - mean(epsilon), add=TRUE, breaks=30, freq=F, col=adjustcolor('dodgerblue', alpha.f=0.2))
beta <- mean(mod2$beta)*2
xi <- rnorm(nn, 0, sqrt(cc))
gamma <- mean(mod2$gamma)
vv <- rep(NA, nn)
for(i in 1:nn){
vv[i] <- rgig2(-1/2, gamma^2, 1)
}
epsilon <- sqrt(ww)*(beta*vv + sqrt(vv)*xi)
par(mfrow=c(1,1))
hist((rgamma(100000, 1.5, 1) - 1.5), breaks=30, freq=F, xlim=c(-10, 15))
hist(epsilon - mean(epsilon), add=TRUE, breaks=30, freq=F, col=adjustcolor('dodgerblue', alpha.f=0.2))
#mod2 <- nwbass2(X, y, maxInt=2, m_gamma = 1, s_gamma = 0.1, scale=1000, m_beta=0, s_beta=1)
mod2 <- nwbass2(X, y, maxInt=2, m_gamma=90, s_gamma=25, scale=1000, m_beta=0, s_beta=1.1)
plot(mod2)
ts.plot(mod2$beta)
par(mfrow=c(1,1))
hist((rgamma(100000, 1.5, 1) - 1.5), breaks=30, freq=F, xlim=c(-10, 15))
hist(epsilon - mean(epsilon), add=TRUE, breaks=30, freq=F, col=adjustcolor('dodgerblue', alpha.f=0.2))
nn <- 1000
ww <- mean(mod2$w)
cc <- 1000
beta <- mean(mod2$beta)
xi <- rnorm(nn, 0, sqrt(cc))
gamma <- mean(mod2$gamma)
vv <- rep(NA, nn)
for(i in 1:nn){
vv[i] <- rgig2(-1/2, gamma^2, 1)
}
epsilon <- sqrt(ww)*(beta*vv + sqrt(vv)*xi)
par(mfrow=c(1,1))
hist((rgamma(100000, 1.5, 1) - 1.5), breaks=30, freq=F, xlim=c(-10, 15))
hist(epsilon - mean(epsilon), add=TRUE, breaks=30, freq=F, col=adjustcolor('dodgerblue', alpha.f=0.2))
#mod2 <- nwbass2(X, y, maxInt=2, m_gamma = 1, s_gamma = 0.1, scale=1000, m_beta=0, s_beta=1)
mod2 <- nwbass2(X, y, maxInt=2, m_gamma=90, s_gamma=25, scale=1000, m_beta=50, s_beta=0)
#mod2 <- nwbass2(X, y, maxInt=2, m_gamma = 1, s_gamma = 0.1, scale=1000, m_beta=0, s_beta=1)
mod2 <- nwbass2(X, y, maxInt=2, m_gamma=90, s_gamma=0, scale=1000, m_beta=50, s_beta=0)
plot(mod2)
ts.plot(mod2$gamma)
nn <- 1000
ww <- mean(mod2$w)
cc <- 1000
beta <- mean(mod2$beta)
xi <- rnorm(nn, 0, sqrt(cc))
gamma <- mean(mod2$gamma)
vv <- rep(NA, nn)
for(i in 1:nn){
vv[i] <- rgig2(-1/2, gamma^2, 1)
}
epsilon <- sqrt(ww)*(beta*vv + sqrt(vv)*xi)
par(mfrow=c(1,1))
hist((rgamma(100000, 1.5, 1) - 1.5), breaks=30, freq=F, xlim=c(-10, 15))
hist(epsilon - mean(epsilon), add=TRUE, breaks=30, freq=F, col=adjustcolor('dodgerblue', alpha.f=0.2))
mod2 <- nwbass2(X, y, maxInt=2, m_gamma=90, s_gamma=25, scale=1, m_beta=0, s_beta=1)
?build_prior
var(y)
build_prior("GIG", 1, 1, 0, prop_sigma=0.2)
#mod2 <- nwbass2(X, y, maxInt=2, m_gamma = 1, s_gamma = 0.1, scale=1000, m_beta=0, s_beta=1)
mod2 <- nwbass2(X, y, maxInt=2, m_gamma=90, s_gamma=25, scale=1, m_beta=0, s_beta=1,
w_prior = build_prior("GIG", 1, 1, 0, prop_sigma=0.2))
#mod2 <- nwbass2(X, y, maxInt=2, m_gamma = 1, s_gamma = 0.1, scale=1000, m_beta=0, s_beta=1)
mod2 <- nwbass2(X, y, maxInt=2, m_gamma=90, s_gamma=25, scale=1, m_beta=0, s_beta=1,
w_prior = build_prior("GIG", 1, 1, 0, prop_sigma=0.2))
N
#mod2 <- nwbass2(X, y, maxInt=2, m_gamma = 1, s_gamma = 0.1, scale=1000, m_beta=0, s_beta=1)
mod2 <- nwbass2(X, y, maxInt=2, m_gamma=90, s_gamma=25, scale=1, m_beta=0, s_beta=1,
w_prior = build_prior("GIG", -1, 0, 1, prop_sigma=0.2))
#mod2 <- nwbass2(X, y, maxInt=2, m_gamma = 1, s_gamma = 0.1, scale=1000, m_beta=0, s_beta=1)
mod2 <- nwbass2(X, y, maxInt=2, m_gamma=90, s_gamma=25, scale=1, m_beta=0, s_beta=1,
w_prior = build_prior("GIG", -1, 0, 1, prop_sigma=0.2))
rMHN(1000, 5, 20, 344)
document()
library(GBASS)
?nwbass2
# Semi-random seed
if(!exists(foobar)) foobar <- 101
exists("foobar")
# Semi-random seed
if(!exists("foobar")) foobar <- 101
set.seed(foobar)
foobar <- foobar+1
X <- lhs::maximinLHS(200, 2)
X <- rbind(X, X, X, X, X)
n <- nrow(X)
y <- apply(X, 1, ff4)*6 + (rgamma(n, 1.5, 1) - 1.5)
#mod2 <- nwbass2(X, y, maxInt=2, m_gamma = 1, s_gamma = 0.1, scale=1000, m_beta=0, s_beta=1)
mod2 <- nwbass2(X, y, maxInt=2, m_gamma=90, s_gamma=25, scale=1, m_beta=0, s_beta=1)
#mod2 <- nwbass2(X, y, maxInt=2, m_gamma = 1, s_gamma = 0.1, scale=1000, m_beta=0, s_beta=1)
mod2 <- nwbass2(X, y, maxInt=2, m_gamma=90, s_gamma=25, scale=1, m_beta=0, s_beta=1, lag_beta=100)
rMHN(1000, 5, 3243423, 342332)
rMHN(1000, 5, -3243423, 342332)
rMHN(1000, 5, -32, 342332)
rMHN(1000, 5, 32, -342332)
rMHN(1000, 5, 32, -3)
document()
#mod2 <- nwbass2(X, y, maxInt=2, m_gamma = 1, s_gamma = 0.1, scale=1000, m_beta=0, s_beta=1)
mod2 <- nwbass2(X, y, maxInt=2, m_gamma=90, s_gamma=25, scale=1, m_beta=0, s_beta=1, lag_beta=100)
document()
#mod2 <- nwbass2(X, y, maxInt=2, m_gamma = 1, s_gamma = 0.1, scale=1000, m_beta=0, s_beta=1)
mod2 <- nwbass2(X, y, maxInt=2, m_gamma=90, s_gamma=25, scale=1, m_beta=0, s_beta=1, lag_beta=100)
rMHN(1000, 5, 2, -1)
rMHN(1000, 5, 2, -100)
rMHN(1000, 5, 2, -10000)
rMHN(1000, 5, 2, -1000000)
rMHN(1000, 5, 24564897, -1000000)
rMHN(1000, 5, 2456489057, -1000)
rMHN(1000, 5, 245648905745646, -1000)
rMHN(1000, 500, 245648905745646, -1000)
rMHN(1000, 500, 2456489057456465454646546456, -1000)
rMHN(1000, 500, 2456489057456465454646546456e8, -1000)
rMHN(1000, 500, 2456489057456465454646546456e8, -1465000)
rMHN(1000, 500, 2456489057456465454646546456e8, 100)
document()
deleteme <- list()
document()
#mod2 <- nwbass2(X, y, maxInt=2, m_gamma = 1, s_gamma = 0.1, scale=1000, m_beta=0, s_beta=1)
mod2 <- nwbass2(X, y, maxInt=2, m_gamma=90, s_gamma=25, scale=1, m_beta=0, s_beta=1, lag_beta=100)
v
deleteme
document()
#mod2 <- nwbass2(X, y, maxInt=2, m_gamma = 1, s_gamma = 0.1, scale=1000, m_beta=0, s_beta=1)
mod2 <- nwbass2(X, y, maxInt=2, m_gamma=90, s_gamma=25, scale=1, m_beta=0, s_beta=1, lag_beta=100)
tmp <- deleteme
tmp$v
length(tmp$v)
tmp$r
tmp$tau
tmp$gam
tmp$bet
hist(r)
hist(tmp$r)
sqrt(w)
sqrt(tmp$w)
tmp$w
document()
#mod2 <- nwbass2(X, y, maxInt=2, m_gamma = 1, s_gamma = 0.1, scale=1000, m_beta=0, s_beta=1)
mod2 <- nwbass2(X, y, maxInt=2, m_gamma=90, s_gamma=25, scale=1, m_beta=0, s_beta=1, lag_beta=100)
plot(mod2)
plot(mod2$beta)
ts.plot(mod2$gamma)
nn <- 1000
ww <- mean(mod2$w)
cc <- 1
beta <- mean(mod2$beta)
xi <- rnorm(nn, 0, sqrt(cc))
gamma <- mean(mod2$gamma)
vv <- rep(NA, nn)
for(i in 1:nn){
vv[i] <- rgig2(-1/2, gamma^2, 1)
}
epsilon <- sqrt(ww)*(beta*vv + sqrt(vv)*xi)
par(mfrow=c(1,1))
hist((rgamma(100000, 1.5, 1) - 1.5), breaks=30, freq=F, xlim=c(-10, 15))
hist(epsilon - mean(epsilon), add=TRUE, breaks=30, freq=F, col=adjustcolor('dodgerblue', alpha.f=0.2))
hist(epsilon)
plot(density(rgamma(1000, 1.5, 1) - 1.5), lwd=2)
plot(density(rgamma(1000, 1.5, 1) - 1.5), lwd=2, xlim=c(-5, 15))
lines(density(epsilon - mean(epsilon)), col='orange')
plot(density(rgamma(1000, 1.5, 1) - 1.5), lwd=2, xlim=c(-5, 15), ylim=c(0, 0.7))
lines(density(epsilon - mean(epsilon)), col='orange', lwd=2)
lines(density(epsilon , col='orange', lwd=2)
)
#mod2 <- nwbass2(X, y, maxInt=2, m_gamma = 1, s_gamma = 0.1, scale=1000, m_beta=0, s_beta=1)
mod1 <- bass(X, y)
library(BASS)
#mod2 <- nwbass2(X, y, maxInt=2, m_gamma = 1, s_gamma = 0.1, scale=1000, m_beta=0, s_beta=1)
mod1 <- bass(X, y)
par(mfrow=c(1,1))
plot(density(rgamma(1000, 1.5, 1) - 1.5), lwd=2, xlim=c(-5, 15), ylim=c(0, 0.7))
lines(density(epsilon - mean(epsilon)), col='orange', lwd=2)
curve(dnorm(x, 0, mean(sqrt(mod1$s2))), add=TRUE, col='dodgerblue', lwd=2)
plot(density(rgamma(1000, 1.5, 1) - 1.5), lwd=2, xlim=c(-3, 6), ylim=c(0, 0.52))
lines(density(epsilon - mean(epsilon)), col='orange', lwd=2)
curve(dnorm(x, 0, mean(sqrt(mod1$s2))), add=TRUE, col='dodgerblue', lwd=2)
plot(density(rgamma(1000, 1.5, 1) - 1.5), lwd=3, xlim=c(-3, 6), ylim=c(0, 0.52))
lines(density(epsilon - mean(epsilon)), col='orange', lwd=3)
curve(dnorm(x, 0, mean(sqrt(mod1$s2))), add=TRUE, col='dodgerblue', lwd=3)
plot(density(rgamma(1000, 1.5, 1) - 1.5), lwd=3, xlim=c(-3, 6), ylim=c(0, 0.52))
lines(density(epsilon - mean(epsilon)), col='orange', lwd=3, lty=2)
curve(dnorm(x, 0, mean(sqrt(mod1$s2))), add=TRUE, col='dodgerblue', lwd=3, lty=3)
plot(density(rgamma(10000, 1.5, 1) - 1.5), lwd=3, xlim=c(-3, 6), ylim=c(0, 0.52))
lines(density(epsilon - mean(epsilon)), col='orange', lwd=3, lty=2)
curve(dnorm(x, 0, mean(sqrt(mod1$s2))), add=TRUE, col='dodgerblue', lwd=3, lty=3)
plot(density(rgamma(100000, 1.5, 1) - 1.5), lwd=3, xlim=c(-3, 6), ylim=c(0, 0.52))
lines(density(epsilon - mean(epsilon)), col='orange', lwd=3, lty=2)
curve(dnorm(x, 0, mean(sqrt(mod1$s2))), add=TRUE, col='dodgerblue', lwd=3, lty=3)
plot(density(rgamma(1000000, 1.5, 1) - 1.5), lwd=3, xlim=c(-3, 6), ylim=c(0, 0.52))
lines(density(epsilon - mean(epsilon)), col='orange', lwd=3, lty=2)
curve(dnorm(x, 0, mean(sqrt(mod1$s2))), add=TRUE, col='dodgerblue', lwd=3, lty=3)
plot(mod1)
plot(mod2)
par(mfrow=c(1,1))
plot(density(rgamma(1000000, 1.5, 1) - 1.5), lwd=3, xlim=c(-3, 6), ylim=c(0, 0.52))
lines(density(epsilon - mean(epsilon)), col='orange', lwd=3, lty=2)
curve(dnorm(x, 0, mean(sqrt(mod1$s2))), add=TRUE, col='dodgerblue', lwd=3, lty=3)
nw_triangle(mod2)
# Semi-random seed
if(!exists("foobar")) foobar <- 101
set.seed(foobar)
foobar <- foobar+1
# Seed done
X <- lhs::maximinLHS(200, 2)
X <- rbind(X, X, X, X, X)
n <- nrow(X)
y <- apply(X, 1, ff4)*6 - (rgamma(n, 1.5, 1) - 1.5)
#mod2 <- nwbass2(X, y, maxInt=2, m_gamma = 1, s_gamma = 0.1, scale=1000, m_beta=0, s_beta=1)
mod1 <- bass(X, y)
mod2 <- nwbass2(X, y, maxInt=2, m_gamma=90, s_gamma=25, scale=1, m_beta=0, s_beta=1, lag_beta=100)
plot(mod2)
nn <- 1000
ww <- mean(mod2$w)
cc <- 1
beta <- mean(mod2$beta)
xi <- rnorm(nn, 0, sqrt(cc))
gamma <- mean(mod2$gamma)
vv <- rep(NA, nn)
for(i in 1:nn){
vv[i] <- rgig2(-1/2, gamma^2, 1)
}
epsilon <- sqrt(ww)*(beta*vv + sqrt(vv)*xi)
par(mfrow=c(1,1))
plot(density(rgamma(1000000, 1.5, 1) - 1.5), lwd=3, xlim=c(-3, 6), ylim=c(0, 0.52))
lines(density(epsilon - mean(epsilon)), col='orange', lwd=3, lty=2)
curve(dnorm(x, 0, mean(sqrt(mod1$s2))), add=TRUE, col='dodgerblue', lwd=3, lty=3)
plot(density(-(rgamma(1000000, 1.5, 1) - 1.5)), lwd=3, xlim=c(-3, 6), ylim=c(0, 0.52))
lines(density(epsilon - mean(epsilon)), col='orange', lwd=3, lty=2)
curve(dnorm(x, 0, mean(sqrt(mod1$s2))), add=TRUE, col='dodgerblue', lwd=3, lty=3)
duqling::stochastic_piston()
library(GBASS)
tic()
library(tictoc)
tic()
mod2 <- nwbass2(X, y, maxInt=2, m_gamma=90, s_gamma=25, scale=1, m_beta=0, s_beta=1, lag_beta=100)
toc()
tic()
mod3 <- tbass2(X, y, maxInt=2, df=10)
tic()
mod3 <- tbass(X, y, maxInt=2, df=10)
toc()
nw_triangle(mod3)
plot(mod3)
var(y)
install.packages("daewr")
library(daewr)
DefScreen(24)
DefScreen(12)
?qbass
library(GBASS)
?qbass
mu_gig <- function(p, a, b){
sqrt(b/a)*besselK(sqrt(a*b), p+1)/besselK(sqrt(a*b), p)
}
var_gig <- function(p, a, b){
(b/a)*(besselK(sqrt(a*b), p+2)/besselK(sqrt(a*b), p) - (besselK(sqrt(a*b), p+1)/besselK(sqrt(a*b), p))^2)
}
rgig2(rep(3, 5), rep(1, 5), rep(2, 5))
BASS:::rgig2.vec(rep(3, 5), rep(1, 5), rep(2, 5))
library(BASS)
BASS:::rgig2.vec(rep(3, 5), rep(1, 5), rep(2, 5))
document()
library(roxygen2)
library(devtools)
document()
BASS:::rgig2.vec(rep(3, 5), rep(1, 5), rep(2, 5))
rgig2.vec <- Vectorize(rgig2, "b")
#' @param a a non-negative parameter. If a=0, then p must be negative.
#' @param b a non-negative parameter. If b=0, then p must be positive.
#' @details A uniformly bounded rejection sample based on Hörmann et. al. (2014). Special cases include Gamma (b=0, p>0), Inverse Gamma (a=0, p<0) and Inverse Gaussian (p=-1/2).
#' @references Hörmann, Wolfgang, and Josef Leydold. "Generating generalized inverse Gaussian random variates." Statistics and Computing 24.4 (2014): 547-557.
#' @export
#' @examples
#' x <- rep(NA, 1000)
#' for(i in 1:1000) x[i] <- rgig2(2, 3, 0.5)
#' hist(x)
#'
rgig2 <- function(p, a, b){
res <- ifelse(a==0, 1/rgamma(1, -p, b/2), GIGrvg::rgig(1, lambda=p, psi=a, chi=b))
}
rgig2(rep(3, 5), rep(1, 5), rep(2, 5))
rgig2.vec(rep(3, 5), rep(1, 5), rep(2, 5))
rgig2.vec(3, 1, rep(2, 5))
rgig2.vec(3, 1, rep(2, 10000))
foo = rgig2.vec(3, 1, rep(2, 10000))
mean(foo)
var(foo)
mu_gig(3, 1, 2)
var_gig(3, 1, 2)
document()
document()
document()
library(GBASS)
document()
?nwbass
?nwbass_dep
?nwbass_depricated
?nwbass2
nwbass2
document()
?nwbass2
